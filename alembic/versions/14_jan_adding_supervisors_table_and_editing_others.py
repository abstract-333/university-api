"""Adding supervisors table and editing others

Revision ID: 73d6536298db
Revises: c6e6c5d54c1c
Create Date: 2024-01-14 00:58:18.745973

"""
from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "73d6536298db"
down_revision: Union[str, None] = "c6e6c5d54c1c"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("taught_courses")
    op.drop_table("years")
    op.create_table(
        "study_periods",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("academic_year", sa.String(), nullable=False),
        sa.Column("current_class", sa.Integer(), nullable=False),
        sa.Column("semester", sa.String(), nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.ForeignKeyConstraint(
            ["current_class"], ["classes.id"], onupdate="CASCADE", ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(
            ["semester"], ["semesters.name"], onupdate="CASCADE", ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint(
            "academic_year",
            "current_class",
            "semester",
            name="non_duplicated_constraint",
        ),
        sa.UniqueConstraint("id"),
    )
    op.create_table(
        "supervisors",
        sa.Column("id", sa.UUID(), server_default=sa.text("uuid7()"), nullable=False),
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column("faculty_name", sa.String(length=32), nullable=False),
        sa.ForeignKeyConstraint(
            ["faculty_name"], ["faculties.name"], onupdate="CASCADE", ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint(
            "user_id", "faculty_name", name="user_id_faculty_constraint"
        ),
    )

    op.add_column("lecturers", sa.Column("user_id", sa.UUID(), nullable=False))
    op.drop_constraint("email_faculty_constraint", "lecturers", type_="unique")
    op.create_unique_constraint(
        "user_id_faculty_constraints", "lecturers", ["user_id", "faculty_name"]
    )
    op.drop_constraint("lecturers_email_fkey", "lecturers", type_="foreignkey")
    op.create_foreign_key(
        None,
        "lecturers",
        "users",
        ["user_id"],
        ["id"],
        onupdate="CASCADE",
        ondelete="CASCADE",
    )
    op.drop_column("lecturers", "email")
    op.alter_column(
        "users",
        "first_name",
        existing_type=sa.VARCHAR(length=64),
        server_default=None,
        existing_nullable=False,
    )
    op.alter_column(
        "users",
        "last_name",
        existing_type=sa.VARCHAR(length=64),
        server_default=None,
        existing_nullable=False,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "users",
        "last_name",
        existing_type=sa.VARCHAR(length=64),
        server_default=sa.text("''::character varying"),
        existing_nullable=False,
    )
    op.alter_column(
        "users",
        "first_name",
        existing_type=sa.VARCHAR(length=64),
        server_default=sa.text("''::character varying"),
        existing_nullable=False,
    )
    op.add_column(
        "lecturers",
        sa.Column("email", sa.VARCHAR(length=640), autoincrement=False, nullable=False),
    )
    op.drop_constraint(None, "lecturers", type_="foreignkey")
    op.create_foreign_key(
        "lecturers_email_fkey",
        "lecturers",
        "users",
        ["email"],
        ["email"],
        onupdate="CASCADE",
        ondelete="CASCADE",
    )
    op.drop_constraint("user_id_faculty_constraint", "lecturers", type_="unique")
    op.create_unique_constraint(
        "email_faculty_constraint", "lecturers", ["email", "faculty_name"]
    )
    op.drop_column("lecturers", "user_id")
    op.create_table(
        "taught_courses",
        sa.Column(
            "id",
            sa.UUID(),
            server_default=sa.text("uuid7()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "course_name", sa.VARCHAR(length=32), autoincrement=False, nullable=False
        ),
        sa.Column(
            "speciality_name",
            sa.VARCHAR(length=32),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("lecturer_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("year_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(
            ["course_name"],
            ["courses.name"],
            name="taught_courses_course_name_fkey",
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["lecturer_id"],
            ["lecturers.id"],
            name="taught_courses_lecturer_id_fkey",
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["speciality_name"],
            ["specialities.name"],
            name="taught_courses_speciality_name_fkey",
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["year_id"],
            ["years.id"],
            name="taught_courses_year_id_fkey",
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name="taught_courses_pkey"),
    )
    op.create_table(
        "years",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("academic_year", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("current_class", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("semester", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("is_active", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(
            ["current_class"],
            ["classes.id"],
            name="years_current_class_fkey",
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["semester"],
            ["semesters.name"],
            name="years_semester_fkey",
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name="years_pkey"),
        sa.UniqueConstraint(
            "academic_year",
            "current_class",
            "semester",
            name="non_duplicated_constraint",
        ),
        sa.UniqueConstraint("id", name="years_id_key"),
    )
    op.drop_table("supervisors")
    op.drop_table("study_periods")
    # ### end Alembic commands ###
