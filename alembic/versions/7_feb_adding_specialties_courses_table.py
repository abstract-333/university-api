"""Adding specialties_courses table

Revision ID: 654af25589c8
Revises: d3de68fb8199
Create Date: 2024-02-07 14:28:05.993161

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "654af25589c8"
down_revision: Union[str, None] = "d3de68fb8199"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "specialities_courses",
        sa.Column("id", sa.UUID(), server_default=sa.text("uuid7()"), nullable=False),
        sa.Column("taught_course_id", sa.UUID(), nullable=False),
        sa.Column("speciality_id", sa.UUID(), nullable=False),
        sa.ForeignKeyConstraint(
            ["speciality_id"],
            ["specialities.id"],
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["taught_course_id"],
            ["taught_courses.id"],
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint(
            "taught_course_id",
            "speciality_id",
            name="taught_course_id_speciality_id_constraint",
        ),
    )
    # op.drop_constraint("course_id_unique", "courses", type_="unique")
    # op.drop_constraint("specialities_id_unique", "specialities", type_="unique")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # op.create_unique_constraint("specialities_id_unique", "specialities", ["id"])
    # op.create_unique_constraint("course_id_unique", "courses", ["id"])
    op.drop_table("specialities_courses")
    # ### end Alembic commands ###
