"""Change taught_course_id to course_id in courses_lecturers

Revision ID: 20240217_13_55_30
Revises: 20240217_03_24_41
Create Date: 2024-02-17 13:55:30.493684

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "20240217_13_55_30"
down_revision: Union[str, None] = "20240217_03_24_41"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "courses_lecturers",
        sa.Column(
            "course_id",
            sa.UUID(),
            nullable=True,
        ),
    )
    op.drop_constraint(
        "courses_lecturers_taught_course_id_fkey",
        "courses_lecturers",
        type_="foreignkey",
    )
    op.create_foreign_key(
        "courses_lecturers_course_id_fkey",
        "courses_lecturers",
        "courses",
        ["course_id"],
        ["id"],
        onupdate="CASCADE",
        ondelete="CASCADE",
    )
    op.drop_column("courses_lecturers", "taught_course_id")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "courses_lecturers",
        sa.Column("taught_course_id", sa.UUID(), autoincrement=False, nullable=True),
    )
    op.drop_constraint(
        "courses_lecturers_course_id_fkey", "courses_lecturers", type_="foreignkey"
    )
    op.create_foreign_key(
        "courses_lecturers_taught_course_id_fkey",
        "courses_lecturers",
        "taught_courses",
        ["taught_course_id"],
        ["id"],
        onupdate="CASCADE",
        ondelete="CASCADE",
    )
    op.drop_column("courses_lecturers", "course_id")
    # ### end Alembic commands ###
