"""Editing Students table

Revision ID: 6c4e81b14b46
Revises: 73d6536298db
Create Date: 2024-01-14 04:11:51.031943

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "6c4e81b14b46"
down_revision: Union[str, None] = "73d6536298db"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column("lecturers", "user_id", existing_type=sa.UUID(), nullable=False)
    op.add_column(
        "students", sa.Column("user_id", sa.String(length=640), nullable=False)
    )
    op.add_column("students", sa.Column("class_id", sa.Integer(), nullable=False))
    op.drop_constraint("email_speciality_constraint", "students", type_="unique")
    op.create_unique_constraint(
        "user_id_speciality_constraint", "students", ["user_id", "speciality_name"]
    )
    op.drop_constraint("students_email_fkey", "students", type_="foreignkey")
    op.create_foreign_key(
        None,
        "students",
        "classes",
        ["class_id"],
        ["id"],
        onupdate="CASCADE",
        ondelete="CASCADE",
    )
    op.create_foreign_key(
        None,
        "students",
        "users",
        ["user_id"],
        ["email"],
        onupdate="CASCADE",
        ondelete="CASCADE",
    )
    op.drop_column("students", "email")
    op.create_unique_constraint(None, "study_periods", ["id"])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, "study_periods", type_="unique")
    op.add_column(
        "students",
        sa.Column("email", sa.VARCHAR(length=640), autoincrement=False, nullable=False),
    )
    op.drop_constraint(None, "students", type_="foreignkey")
    op.drop_constraint(None, "students", type_="foreignkey")
    op.create_foreign_key(
        "students_email_fkey",
        "students",
        "users",
        ["email"],
        ["email"],
        onupdate="CASCADE",
        ondelete="CASCADE",
    )
    op.drop_constraint("user_id_speciality_constraint", "students", type_="unique")
    op.create_unique_constraint(
        "email_speciality_constraint", "students", ["email", "speciality_name"]
    )
    op.drop_column("students", "class_id")
    op.drop_column("students", "user_id")
    op.alter_column("lecturers", "user_id", existing_type=sa.UUID(), nullable=True)
    # ### end Alembic commands ###
